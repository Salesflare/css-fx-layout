@import "mixins";

/// Generates flex data-attribute selectors
@mixin flex-attributes {
	*[data-fx-flex] {
		@include flex-properties;
	}

	*[data-fx-flex-auto] {
		@include flex-auto-properties;
	}

	*[data-fx-flex-grow] {
		@include flex-grow-properties;
	}

	*[data-fx-flex-initial] {
		@include flex-initial-properties;
	}

	*[data-fx-flex-none] {
		@include flex-none-properties;
	}

	*[data-fx-flex-nogrow] {
		@include flex-nogrow-properties;
	}

	*[data-fx-flex-noshrink] {
		@include flex-noshrink-properties;
	}

	*:has(>[data-fx-flex],>[data-fx-flex-auto],>[data-fx-flex-grow],>[data-fx-flex-initial],>[data-fx-flex-none],>[data-fx-flex-nogrow],>[data-fx-flex-noshrink]):not([data-layout]) {
		@include flex-row-properties;
	}
}

// these do not automatically add flex to their parent container
@mixin flex-attributes-for-media-sizes {
	@each $name, $_ in $flex-layout-media-queries {
		@include flex-layout-media($name) {
			*[data-fx-flex-#{$name}] {
				@include flex-properties;
			}

			*[data-fx-flex-auto-#{$name}] {
				@include flex-auto-properties;
			}

			*[data-fx-flex-grow-#{$name}] {
				@include flex-grow-properties;
			}

			*[data-fx-flex-initial-#{$name}] {
				@include flex-initial-properties;
			}

			*[data-fx-flex-none-#{$name}] {
				@include flex-none-properties;
			}

			*[data-fx-flex-nogrow-#{$name}] {
				@include flex-nogrow-properties;
			}

			*[data-fx-flex-noshrink-#{$name}] {
				@include flex-noshrink-properties;
			}
		}
	}
}
